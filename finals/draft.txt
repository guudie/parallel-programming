- trên cpu:
    > tính độ quan trọng = edge detection convolution
    > qhđ mảng 2 chiều
    > tính giá trị seam nhỏ nhất hàng cuối
    > truy vết
    > cập nhật input
- trên gpu:
    + v1:
        > tính độ quan trọng mỗi pixel = edge detection convolution (HW3)
        > qhđ từng hàng trên gpu (1 block, dễ sync)
        > tính gía trị seam nhỏ nhất và pixel cuối của nó = reduction trên hàng cuối cùng (gpu)
        > truy vết (cpu)
        > thread t cập nhật phần tử new(i, j) => new(i, j) = old(i, j) nếu j nằm trc pixel bị bỏ trên seam trên hàng i
                                                           = old(i, j+1) nếu ngược lại



///////////////////////////////////////////////////////////////////

40 SM
1024 thread/SM

> 1024 * 40 => vài block queue trong SM
128 => 1024 / 128 (blocks/SM)
8 * 40 = gridsize

o o o | o o o | o o o | o o o o o o o o o o o o
o o o | o o o | o o o

for
    wait_for_prev()
    __syncthreads()
    for threadIdx, active_threads + threadIdx, active_threads * 2 + threadIdx, ....
        __syncthreads()


### streams execution order